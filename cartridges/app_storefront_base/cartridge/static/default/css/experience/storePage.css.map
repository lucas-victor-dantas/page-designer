{"version":3,"sources":["webpack:///./cartridges/app_storefront_base/cartridge/client/default/scss/experience/cartridges/app_storefront_base/cartridge/client/default/scss/experience/experienceGlobal.scss","webpack:///./cartridges/app_storefront_base/cartridge/client/default/scss/experience/cartridges/app_storefront_base/cartridge/client/default/scss/experience/variables.scss","webpack:///./cartridges/app_storefront_base/cartridge/client/default/scss/experience/storePage.scss","webpack:///./cartridges/app_storefront_base/cartridge/client/default/scss/experience/node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack:///./cartridges/app_storefront_base/cartridge/client/default/scss/experience/cartridges/app_storefront_base/cartridge/client/default/scss/experience/storePage.scss"],"names":[],"mappings":"AAIA;EACI,8BC2Be;CC9BlB;;AFMD;EACI;EACA,8BCsBe;CCzBlB;;ACqDG;EH9CA;IACI;GEHL;CACF;AC+CG;EHxCA;IACI;GEJL;CACF;AFOD;EACI;EACA,iBCWkB;EDVlB,8BCIe;CCTlB;;AFQD;EACI,gBCLkB;EDMlB,iBCKkB;EDJlB,8BCFe;CCHlB;;AFQD;EACI,mBCfW;EDgBX,iBCDkB;EDElB,8BCRe;EDSf;CELH;;AFQD;EACI,kBCrBW;EDsBX,iBCViB;EDWjB,8BCfe;CCUlB;;AFQD;EACI,iBCfiB;EDgBjB,8BCpBe;CCelB;;AE5CD;EACI","file":"default\\css\\experience\\storePage.css","sourcesContent":["@import \"variables\";\r\n@import \"bootstrap/scss/variables\";\r\n@import \"bootstrap/scss/mixins/breakpoints\";\r\n\r\nbody {\r\n    font-family: $base-font-family;\r\n}\r\n\r\nhtml {\r\n    font-size: 0.875rem;\r\n    font-family: $base-font-family;\r\n}\r\n\r\n@include media-breakpoint-up(sm) {\r\n    html {\r\n        font-size: 1rem;\r\n    }\r\n}\r\n\r\n@include media-breakpoint-up(md) {\r\n    html {\r\n        font-size: 1.125rem;\r\n    }\r\n}\r\n\r\nh1 {\r\n    font-size: $heading-1-font-size;\r\n    font-weight: $font-weight-heavier;\r\n    font-family: $base-font-family;\r\n}\r\n\r\nh2 {\r\n    font-size: $heading-2-font-size;\r\n    font-weight: $font-weight-heavier;\r\n    font-family: $base-font-family;\r\n}\r\n\r\nh3 {\r\n    font-size: $heading-3-font-size;\r\n    font-weight: $font-weight-heavier;\r\n    font-family: $base-font-family;\r\n    text-align: center;\r\n}\r\n\r\nh4 {\r\n    font-size: $heading-4-font-size;\r\n    font-weight: $font-weight-huskie;\r\n    font-family: $base-font-family;\r\n}\r\n\r\nh5 {\r\n    font-weight: $font-weight-huskie;\r\n    font-family: $base-font-family;\r\n}\r\n","@import \"../variables\";\r\n\r\n// Colors\r\n$white: #fff !default;\r\n$black: #000 !default;\r\n$red: #c23934 !default;\r\n$dark-blue: #061c3f;\r\n\r\n$gray-1: #222 !default;\r\n$gray-2: #444 !default;\r\n$gray-3: #999 !default;\r\n$gray-4: #ccc !default;\r\n\r\n$gray-transparent-1: rgba(0, 0, 0, 0.4) !default;\r\n\r\n$light-gray: $gray-4 !default;\r\n$dark-gray: $gray-1 !default;\r\n\r\n// Font Colors\r\n$white-text: $white !default;\r\n\r\n// Font sizes\r\n$base-font-size: 1rem !default;\r\n$xl-font-size: $base-font-size * 1.67 !default;\r\n$lg-font-size: $base-font-size * 1.5 !default;\r\n\r\n$heading-1-font-size: $base-font-size * 4 !default;\r\n$heading-2-font-size: $base-font-size * 3 !default;\r\n$heading-3-font-size: $xl-font-size !default;\r\n$heading-4-font-size: $lg-font-size !default;\r\n\r\n// Font family\r\n$base-font-family: \"Helvetica Neue\" !default;\r\n\r\n// Font weight\r\n$base-font-weight: 400 !default;\r\n$font-weight-huskie: 600 !default;\r\n$font-weight-heavy: 700 !default;\r\n$font-weight-heavier: 900 !default;\r\n\r\n// Thin Banner\r\n$thin-banner-font: $base-font-family !default;\r\n$thin-banner-background-color: $dark-blue !default;\r\n$thin-banner-text-color: $white !default;\r\n$thin-banner-link-color: $white !default;\r\n$thin-banner-visited-link-color: $white !default;\r\n\r\n// Main Banner\r\n$banner-font: $base-font-family !default;\r\n$banner-heading-text-color: $white !default;\r\n$banner-sub-text-color: $white !default;\r\n$banner-sub-text-font-size: $xl-font-size !default;\r\n\r\n// Image Text Component\r\n$image-text-font: $base-font-family !default;\r\n\r\n// Link Banner Component\r\n$shop-category-font: $base-font-family !default;\r\n$shop-category-font-size: $base-font-size !default;\r\n$shop-category-header-color: $gray-1 !default;\r\n$shop-category-header-font-color-other: $white !default;\r\n$shop-category-header-font-weight: $font-weight-heavier !default;\r\n$shop-category-label-a-color: $gray-1 !default;\r\n$shop-category-label-a-color-other: $white !default;\r\n\r\n// Product\r\n$product-font: $base-font-family !default;\r\n$product-name-color: $gray-1 !default;\r\n$product-ratings-number-color: $gray-2 !default;\r\n$product-ratings-weight: $base-font-weight !default;\r\n$product-quick-shop-box-shadow-color: $gray-transparent-1 !default;\r\n$product-swatch-shadow-color: $gray-4 !default;\r\n$product-swatch-shadow-active-color: $gray-3 !default;\r\n\r\n// Product Tile\r\n$product-tile-more-swatch-color: $gray-2 !default;\r\n$product-tile-quick-shop-background-color: $white !default;\r\n$product-tile-quick-shop-text-color: $black !default;\r\n$product-tile-quick-shop-font-weight: $font-weight-huskie !default;\r\n\r\n// Price\r\n$price-color: $gray-1 !default;\r\n$price-font-weight: $font-weight-heavy !default;\r\n$strike-through-price-color: $gray-3 !default;\r\n$reduced-price-color: $red !default;\r\n\r\n// Shop the Look Component\r\n$shop-the-look-text-color: $white !default;\r\n$shop-the-look-link-color: $black !default;\r\n$shop-the-look-product-name-text-size: $heading-3-font-size !default;\r\n$shop-the-look-product-name-text-weight: $font-weight-heavier !default;\r\n","body {\n  font-family: \"Helvetica Neue\";\n}\n\nhtml {\n  font-size: 0.875rem;\n  font-family: \"Helvetica Neue\";\n}\n\n@media (min-width: 544px) {\n  html {\n    font-size: 1rem;\n  }\n}\n@media (min-width: 769px) {\n  html {\n    font-size: 1.125rem;\n  }\n}\nh1 {\n  font-size: 4rem;\n  font-weight: 900;\n  font-family: \"Helvetica Neue\";\n}\n\nh2 {\n  font-size: 3rem;\n  font-weight: 900;\n  font-family: \"Helvetica Neue\";\n}\n\nh3 {\n  font-size: 1.67rem;\n  font-weight: 900;\n  font-family: \"Helvetica Neue\";\n  text-align: center;\n}\n\nh4 {\n  font-size: 1.5rem;\n  font-weight: 600;\n  font-family: \"Helvetica Neue\";\n}\n\nh5 {\n  font-weight: 600;\n  font-family: \"Helvetica Neue\";\n}\n\n.storepage {\n  width: 100%;\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@import \"variables\";\r\n@import \"experienceGlobal\";\r\n\r\n.storepage {\r\n    width: 100%;\r\n}\r\n"],"sourceRoot":""}